# アノテーション {#sec-annotation}

## はじめに {#sec-annotation-intro}

ここでは、野外に設置した音声レコーダーを用いてカエルの鳴き声を録音した、あるいは録音する予定であるという状況を想定し、得られた録音データの解析方法を扱います。同様の手法がカエル以外の生物でも適用可能ですが、コウモリなど可聴域を超える音声については後に紹介するBirdNETが[未対応です](https://github.com/kahst/BirdNET-Analyzer/issues/236)。

種を判定するためのディープラーニングモデルを作るには、まず**対象種の訓練データが必要**となります。このために、データに対し種名等のラベルを付けることを**アノテーション**といいます。日本産のカエル類ではアノテーション済みの公開データは非常に少ないため、多くの場合、調査者がアノテーションを行うか、あるいは合成音声を作成する必要があります。ここでは野外環境に近いデータに基づき訓練を行うため、野外録音をアノテーションする方法を紹介します。

アノテーション用のソフトとして、生物音響分野では[Raven Pro/Lite](https://store.birds.cornell.edu/collections/raven-sound-software)（Proは有料版。無料版のLiteでもアノテーションは可能）や[Audacity](https://www.audacityteam.org/)を利用している例が多いようです。これらのソフトは音響解析一般を扱うもので、必ずしも大量のファイルをアノテーションすることに最適化されているわけではありませんが、ユーザーが多く動作が安定しているため、扱いやすいと思いました。ここでは**Raven Lite**を用いてアノテーションする方法を紹介します。

## セットアップ {#sec-annotation-setup}

**インストール**

[Raven Lite](https://store.birds.cornell.edu/products/raven-lite-2-0-free-license)のページからソフトのインストールを行ってください。インストール方法については全国鳥類繁殖分布調査による解説 <https://www.bird-atlas.jp/data/download.pdf> があります。

インストールが完了したらRaven Liteを起動します。以下では初期設定とアノテーションの流れを扱います。より詳しいRavenの操作方法はYoutubeでわかりやすい [解説](https://www.youtube.com/playlist?list=PL9iLFNlWcYEVrvictnro8VWfzLJaFqvLw) があります。動画は英語ですが必要に応じて字幕\>自動翻訳を使うこともできます。

**設定**

続いてRavenの表示設定をアノテーションしやすいように調整します。試しにサンプルデータ（@sec-index-dataset）でダウンロードしたデータのうちの一つ（sample_data/train/20220315_090000.WAV）をRavenで開いてみましょう。ファイルをRavenの画面にドラッグアンドドロップし、OKを押すと @fig-raven-initial のような表示になるかと思います（Macでの画面です）。

::: {.callout-note title="サンプルデータについて"}
訓練用のサンプルデータはsample_dataフォルダ内のtrainフォルダに入っています。このようなフォルダの構造をsample_data/trainと記しています。

このデータは京都市の山中の小さな池にAudiomoth（OpenAcoustics社製）というレコーダーを設置して録音されたものです。各ファイルの長さは60秒です。もともと @Kimura2023-tc で扱ったデータをRavenを用いてアノテーションし直したものになります。すべてのサンプル音声データはアノテーション済みで、サンプルの音声データと同じフォルダ内に、アノテーション結果を保存したtxtファイルも含めています。
:::

![Ravenの初期表示](figs/raven-initial.png){#fig-raven-initial}

画面上部には波形が、下部はスペクトログラムが表示されています。この音源にはヒキガエルの鳴き声が含まれていますが、デフォルトの設定では表示が小さくアノテーションしにくいので、設定を変更します。定まった方法があるわけではなく好みの問題ですが、個人的には以下のような設定で表示させています。

1. 波形を非表示にする（Waveform 1 のチェックを外す @fig-raven-setting-menu)
2. 4段表示にする（Lines: 1 を Lines: 4に変更する）。
3. 白黒表示にして、明るさとコントラストを少し上げる（初期設定の50から、70くらいに変更）。
4. 表示される周波数の上限を7 kHzほどまで下げる（画面右端の＋マークをクリックして、周波数方向に拡大表示をする）。

![Ravenの表示設定変更。説明の文字が見えやすいよう、画面を白黒画像に変換しています](figs/raven-setting-menu.png){#fig-raven-setting-menu}

さらに、

- アノテーションしたとき種名ラベルが画面上に表示されるようにする。
    -   画面上で右クリック \> Configure Selection Labels \> Available ItemsからAnnotationを選択後、「\<\<」 ボタンを押し、Displayed Itemsに移動させる。同時にFont sizeを14まで小さくする。

これにより @fig-raven-setting のように表示されます。

![表示設定を調整後](figs/raven-setting.png){#fig-raven-setting}

この状態で画面を右クリックし、Window Presets \> Save as... から表示設定を保存してください。たとえばFrogAnnotationといった後からわかる名前にします。次回以降、音声を読み込む際にはWindow PresetをFrogAnnotationに変更することで  、ここで定めた表示設定で音声を読み込むことができます（@fig-raven-preset）。

![音声読み込みの際にWindow Presetを新しく保存したプリセットに変更する](figs/raven-window-preset.png){#fig-raven-preset}

## アノテーション {#sec-annnotation-annotation}

### 鳴き声のアノテーション方法

1. 再生ボタン（▶）から音声を聞いて、何の種がいつ鳴いているかを確認します

1. 鳴き声の範囲をマウスでドラッグすると、四角いボックスが赤色で描かれます

1. そのままEnterをクリックするとAnnotation（どんなラベルを付けるか）を聞かれるので、種名を記録します（@fig-raven-annotation）。

私は @Canas2023-hs をまねて、学名の属名と種小名の冒頭３文字をAnnotationに記載しています。たとえばニホンヒキガエル *Bufo japonicus* であればBUFJAPです。このとき「Use specified value as default」にチェックをいれると、同じファイルのなかで別の領域を選択した場合にBUFJAPが記入された状態から始まるので、何度も同じ文字を打ち込む必要がなく、ミスを減らせます。

![アノテーションの例](figs/raven-annotation.png){#fig-raven-annotation}

これをすべての鳴き声について続けると、 @fig-raven-annotated のようアノテーションできます。今回はすでにアノテーションされたデータをdataフォルダに含めているので保存する必要はありませんが、実際に自分のデータをアノテーションする場合は File \> Save Selection Table "Table 1" から結果を保存できます。

:::{#fig-raven-annotated layout-ncol=2}

![2022年3月15日の音声](figs/raven-annotated1.png)

![2022年3月26日の音声](figs/raven-annotated2.png)

アノテーションを完了したファイルの例
:::

### アノテーションの基準

どのようにアノテーションするかについて定まった方法はありません。北米の鳥(@Chronister2021-au) やブラジルのカエル(@Canas2023-hs)についてアノテーションされたデータセットが公開されているため、手法の検討のうえで参考にしました。

なお、サンプルデータの作成にあたっては以下の基準でカエルの鳴き声をアノテーションしました。

- 同種の鳴き声で、鳴き声の間隔が0.5秒未満のものは一つの鳴き声として四角で囲った。
- 音を聞くとかろうじて聞こえるものでも、スペクトログラム上でほとんど表示されない鳴き声については無視した。
- 種不名の鳴き声は「frog」というラベルをつけた。

### どれだけアノテーションするのか

アノテーションは時間と手間のかかる作業です。どれだけアノテーションする必要があるか、一概には言えないようですが、たとえば[BirdNETのドキュメント](https://github.com/kahst/BirdNET-Analyzer)では各種最低100サンプル以上を推奨しています。BirdNETの場合、3秒間を一つの解析処理の単位として扱うため、3秒の音声ファイルが100個（合計300秒）ということになります。個人的な経験でも、背景音のノイズが比較的少なく、鳴き声が明瞭に聞こえる場合にはこれくらいの分量で一定の精度が出るような感覚があります。各種100サンプル以上用意できたら一度モデルを訓練してみて、目標とする性能に達していなければ、アノテーションを追加するという作業を繰り返すのが良いように思います。

ディープラーニングでは訓練データに含まれないような音声があると適切に判断できないことが多いので、なるべく様々な種類の背景音（雨・救急車の音・異なる鳥や虫の声など）が含まれるようアノテーションする音声ファイルを選ぶことが推奨されます。

## その他のアノテーションソフト {#sec-annotation-others}

はじめに（[-@sec-annotation-intro]） で述べたように、Raven Liteは大量のファイルをアノテーションすることに必ずしも最適化されていないと感じます。生物音響用のアノテーションに特化したソフトを開発している論文も複数あり、たとえば Deep Audio Segmenter (@Steinfath2021-du) や Whombat (@Balvanera2023-uw) が挙げられ、それぞれに面白い機能を持っています。生物音響解析ソフトまとめている[サイト](https://github.com/rhine3/bioacoustics-software)には他の選択肢も載っています。

このうちのいくつかMacで使えるものを試してみましたが、インストールにPythonの環境構築が必要だったり、動作が不安定だったりと、自分で使う分には慣れればなんとかなるものの、他人に勧めるという観点からはRavenが現状一番かなと感じました。
